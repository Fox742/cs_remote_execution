//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ExecutionService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExecutionResults", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class ExecutionResults : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompilationOutputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CompilationPassedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExecutionPassedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReturnCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RuntimeOutputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception exceptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompilationOutput {
            get {
                return this.CompilationOutputField;
            }
            set {
                if ((object.ReferenceEquals(this.CompilationOutputField, value) != true)) {
                    this.CompilationOutputField = value;
                    this.RaisePropertyChanged("CompilationOutput");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CompilationPassed {
            get {
                return this.CompilationPassedField;
            }
            set {
                if ((this.CompilationPassedField.Equals(value) != true)) {
                    this.CompilationPassedField = value;
                    this.RaisePropertyChanged("CompilationPassed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExecutionPassed {
            get {
                return this.ExecutionPassedField;
            }
            set {
                if ((this.ExecutionPassedField.Equals(value) != true)) {
                    this.ExecutionPassedField = value;
                    this.RaisePropertyChanged("ExecutionPassed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReturnCode {
            get {
                return this.ReturnCodeField;
            }
            set {
                if ((this.ReturnCodeField.Equals(value) != true)) {
                    this.ReturnCodeField = value;
                    this.RaisePropertyChanged("ReturnCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RuntimeOutput {
            get {
                return this.RuntimeOutputField;
            }
            set {
                if ((object.ReferenceEquals(this.RuntimeOutputField, value) != true)) {
                    this.RuntimeOutputField = value;
                    this.RaisePropertyChanged("RuntimeOutput");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionKey {
            get {
                return this.SessionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionKeyField, value) != true)) {
                    this.SessionKeyField = value;
                    this.RaisePropertyChanged("SessionKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception exception {
            get {
                return this.exceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.exceptionField, value) != true)) {
                    this.exceptionField = value;
                    this.RaisePropertyChanged("exception");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExecutionService.iExecitionService")]
    public interface iExecitionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iExecitionService/CompileExecute", ReplyAction="http://tempuri.org/iExecitionService/CompileExecuteResponse")]
        Client.ExecutionService.ExecutionResults CompileExecute(string programm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iExecitionService/CompileExecute", ReplyAction="http://tempuri.org/iExecitionService/CompileExecuteResponse")]
        System.Threading.Tasks.Task<Client.ExecutionService.ExecutionResults> CompileExecuteAsync(string programm);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface iExecitionServiceChannel : Client.ExecutionService.iExecitionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class iExecitionServiceClient : System.ServiceModel.ClientBase<Client.ExecutionService.iExecitionService>, Client.ExecutionService.iExecitionService {
        
        public iExecitionServiceClient() {
        }
        
        public iExecitionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public iExecitionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public iExecitionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public iExecitionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.ExecutionService.ExecutionResults CompileExecute(string programm) {
            return base.Channel.CompileExecute(programm);
        }
        
        public System.Threading.Tasks.Task<Client.ExecutionService.ExecutionResults> CompileExecuteAsync(string programm) {
            return base.Channel.CompileExecuteAsync(programm);
        }
    }
}
